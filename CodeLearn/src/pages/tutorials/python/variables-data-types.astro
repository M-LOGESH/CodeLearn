---
import SidebarLayout from '../../../layouts/SidebarLayout.astro';
import "../../../styles/global.css";
---

<SidebarLayout app="python">
  <h1 class="text-xl sm:text-3xl font-bold mb-5 text-custom-accent text-center">
    Variables & Data Types
  </h1>

  <section class="mb-5 space-y-6 text-base sm:text-lg leading-relaxed text-custom-secondary">
    <p>
      Python is dynamically typed, meaning you don't need to declare variable types explicitly. The interpreter automatically determines the type based on the assigned value.
    </p>

    <h2 class="text-xl sm:text-2xl font-semibold text-custom-accent mt-6 mb-3">Basic Data Types</h2>

    <div class="overflow-x-auto">
      <table class="min-w-full border-collapse border border-custom text-sm sm:text-base">
        <thead>
          <tr class="bg-custom-secondary">
            <th class="border border-custom px-3 py-2 sm:px-4 sm:py-2 text-custom-primary">Data Type</th>
            <th class="border border-custom px-3 py-2 sm:px-4 sm:py-2 text-custom-primary">Description</th>
            <th class="border border-custom px-3 py-2 sm:px-4 sm:py-2 text-custom-primary">Example</th>
          </tr>
        </thead>
        <tbody class="text-custom-secondary">
          <tr>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2">int</td>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2">Integer numbers</td>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2"><code>age = 25</code></td>
          </tr>
          <tr>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2">float</td>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2">Floating-point numbers</td>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2"><code>price = 19.99</code></td>
          </tr>
          <tr>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2">str</td>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2">Text strings</td>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2"><code>name = "Alice"</code></td>
          </tr>
          <tr>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2">bool</td>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2">Boolean values</td>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2"><code>is_valid = True</code></td>
          </tr>
          <tr>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2">NoneType</td>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2">Absence of value</td>
            <td class="border border-custom px-3 py-2 sm:px-4 sm:py-2"><code>result = None</code></td>
          </tr>
        </tbody>
      </table>
    </div>

    <h2 class="text-xl sm:text-2xl font-semibold text-custom-accent mt-6 mb-3">Variable Examples</h2>

    <div class="bg-custom-secondary border border-custom rounded-lg p-3 sm:p-4 my-4">
      <pre class="text-xs sm:text-sm overflow-x-auto whitespace-pre-wrap"><code>{`# Variable assignment
name = "John Doe"
age = 30
height = 5.9
is_student = False

# Multiple assignment
x, y, z = 1, 2, 3

# Swapping variables
a = 5
b = 10
a, b = b, a  # Now a=10, b=5

# Checking data types
print(type(name))    # <class 'str'>
print(type(age))     # <class 'int'>
print(type(height))  # <class 'float'>
print(type(is_student))  # <class 'bool'>

# Type conversion
number_str = "123"
number_int = int(number_str)
number_float = float(number_str)

text = str(456)
print(text)  # "456"`}</code></pre>
    </div>

    <div class="bg-custom-secondary border border-custom rounded-2xl p-4 sm:p-6 mt-6">
      <h2 class="text-xl sm:text-2xl font-semibold text-custom-accent mb-3">Variable Naming Rules</h2>
      <ul class="list-disc list-inside space-y-2 pl-4">
        <li>Must start with a letter or underscore</li>
        <li>Can contain letters, numbers, and underscores</li>
        <li>Case-sensitive (<code class="bg-custom-primary text-custom-secondary px-1 rounded text-sm">age</code> and <code class="bg-custom-primary text-custom-secondary px-1 rounded text-sm">Age</code> are different)</li>
        <li>Cannot use Python keywords (<code class="bg-custom-primary text-custom-secondary px-1 rounded text-sm">if</code>, <code class="bg-custom-primary text-custom-secondary px-1 rounded text-sm">for</code>, <code class="bg-custom-primary text-custom-secondary px-1 rounded text-sm">while</code>, etc.)</li>
        <li>Use snake_case for variable names (<code class="bg-custom-primary text-custom-secondary px-1 rounded text-sm">user_name</code> not <code class="bg-custom-primary text-custom-secondary px-1 rounded text-sm">userName</code>)</li>
      </ul>
    </div>
  </section>
</SidebarLayout>